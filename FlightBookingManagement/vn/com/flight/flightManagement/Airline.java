package vn.com.flight.flightManagement;

import domainapp.basics.exceptions.ConstraintViolationException;
import domainapp.basics.model.meta.AttrRef;
import domainapp.basics.model.meta.DAttr;
import domainapp.basics.model.meta.DOpt;
import domainapp.basics.model.meta.DAttr.Type;
import domainapp.basics.util.Tuple;

public class Airline {
	
	  @DAttr(name="id",id=true,auto=true,length=3,mutable=false,optional=false,type=Type.Integer)
	  private int id;
	//static variable to keep track of airline id
	  private static int idCounter;
	  @DAttr(name="airlineName",type=Type.String,length=20,optional=false,cid=true)
	  private String airlineName;
	  
	  @DOpt(type=DOpt.Type.ObjectFormConstructor)
	  @DOpt(type=DOpt.Type.RequiredConstructor)
	  public Airline(@AttrRef("airlineName") String airlineName) 
	  {
	    this(null, airlineName);
	  }
	  public Airline(Integer id, String airlineName) 
	  {
		    this.id = nextId(id);
		    this.airlineName = airlineName;		   
	  }
	public String getAirlineName() 
      {
		return airlineName;
	  }
	public void setAirlineName(String airlineName)
	  {
		this.airlineName = airlineName;
	  }
	public int getId() 
	  {
		return id;
	  }
	private static int nextId(Integer currID) 
	  {
	    if (currID == null) 
	    {
	      idCounter++;
	      return idCounter;
	    } else {
	      int num = currID.intValue();
	      if (num > idCounter)
	        idCounter = num;
	      
	      return currID;
	    }
	  }
  /**
   * @requires 
   *  minVal != null /\ maxVal != null
   * @effects 
   *  update the auto-generated value of attribute <tt>attrib</tt>, specified for <tt>derivingValue</tt>, using <tt>minVal, maxVal</tt>
   */
  @DOpt(type=DOpt.Type.AutoAttributeValueSynchroniser)
  public static void updateAutoGeneratedValue(
      DAttr attrib,
      Tuple derivingValue, 
      Object minVal, 
      Object maxVal) throws ConstraintViolationException 
     {
    
    if (minVal != null && maxVal != null) 
     {
      //TODO: update this for the correct attribute if there are more than one auto attributes of this class 
      int maxIdVal = (Integer) maxVal;
      if (maxIdVal > idCounter)  
        idCounter = maxIdVal;
    }
  }
  @Override
  public String toString() 
    {
    return airlineName ;
    }
	  
}
